class Solution {
public:
    ListNode *rev(ListNode *head)
    {
        if(!head and !head->next)    
                return head;
        ListNode *curr = head;
        ListNode *next = head->next;
        ListNode *prev = nullptr;
        
        while(curr)
        {
                curr->next=prev;
                prev = curr;
                curr=next;
            
            if(next)       next=next->next;
        }
        return prev;
    }
    
    bool isPalindrome(ListNode* head) 
    {
        if(!head or !head->next)  return true;
            ListNode *slow = head;
            ListNode *fast = head;
            
            while(slow and fast and fast->next)
            {
                fast = fast->next->next;
                slow =slow->next;
            }
            
            if(fast)
                    slow=slow->next;
            slow = rev(slow);
            
            while(slow and head)
            {
                if(slow->val!=head->val)    return  false;
                head = head->next;
                slow = slow->next;
            }
            return true;
    }
};
