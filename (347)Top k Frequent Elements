class cmp
{
public:
    int operator() (pair<int,int>&a, pair<int,int>&b)
    {
        return a.second<b.second;
    }
};

class Solution 
{
public:
        vector<int>topKFrequent(vector<int>&nums, int k) 
        {
        priority_queue<pair<int,int>,vector<pair<int,int>>,cmp>pq;
        unordered_map<int,int>mp;
        
        for(int i=0 ; i<nums.size() ; i++)
            mp[nums[i]]++;
        
        for(auto it=mp.begin() ; it!=mp.end() ; it++)
        {
            pq.push(pair<int,int>(it->first, it->second));   
        }
        
        vector<int>ans;
        
        for(int i=0 ; i<k ; i++)
        {
            auto maximum = pq.top();
            pq.pop();
            ans.push_back(maximum.first);
        }
        return ans;
    }
};
